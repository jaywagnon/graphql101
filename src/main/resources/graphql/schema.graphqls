schema {
    mutation: Mutation
    query: Query
}

enum Genre {
    ROMANCE,
    FICTION,
    FANTASY,
    SCI_FI
}

type Author {
    id: Int!
    name: String!
    books: [Book!]!
}

input AuthorInput {
    name: String!
}

type Book {
    id: Int!
    name: String!
    genre: Genre!
    author: Author!
}

input BookInput {
    name: String!
    genre: Genre!
    authorId: Int!
}

type Query {
    "Simply returns 'true'.  A no-op query to satisfy the minimum requirements for a GraphQL schema."
    healthCheck: Boolean!

    getAuthors: [Author!]!
    getAuthorById(id: Int!): Author

    getBooks: [Book!]!
    getBookById(id: Int!): Book
    getBooksByGenre(genre: Genre!): [Book!]!
}

type Mutation {
    addAuthor(input: AuthorInput!): Author!
    editAuthor(id: Int!, input: AuthorInput!): Author!

    addBook(input: BookInput!): Book!
    editBook(id: Int!, input: BookInput!): Book!
}